setwd("E:/R Directory/Facial")

train <- read.csv("training.csv", na.strings = c("", "NA"))

img <- train$Image
img <- as.character(img)


img <- noquote(unlist(strsplit(img, " ")))
img <- as.numeric(img)

img1 <- matrix(img, nrow=7049, ncol=96*96, byrow = T)
train <- train[,-31]

library(mxnet)

img1 <- data.frame(img1)

x <- complete.cases(train)
n <- colnames(train)

traingood <- train[x,]
imggood <- img1[x,]
imggood <- t(imggood/255)
traingood <- t(traingood)

data <- mx.symbol.Variable('data')
conv1 <- mx.symbol.Convolution(data=data, kernel=c(5,5), num_filter=20)
tanh1 <- mx.symbol.Activation(data=conv1, act_type="tanh")
pool1 <- mx.symbol.Pooling(data=tanh1, pool_type="max",
                            kernel=c(2,2), stride=c(2,2))
conv2 <- mx.symbol.Convolution(data=pool1, kernel=c(5,5), num_filter=50)
tanh2 <- mx.symbol.Activation(data=conv2, act_type="tanh")
pool2 <- mx.symbol.Pooling(data=tanh2, pool_type="max",
                           kernel=c(2,2), stride=c(2,2))

flatten <- mx.symbol.Flatten(data=pool2)
fc1 <- mx.symbol.FullyConnected(data=flatten, num_hidden=500)
tanh3 <- mx.symbol.Activation(data=fc1, act_type="tanh")

fc2 <- mx.symbol.FullyConnected(data=tanh3, num_hidden=30)
lro <- mx.symbol.LinearRegressionOutput(fc2)

imggood <- data.matrix(imggood)
traingood <- data.matrix(traingood)

train.array <- imggood
dim(train.array) <- c(96, 96, 1, ncol(imggood))

mx.set.seed(0)

devices <- mx.cpu()
model <- mx.model.FeedForward.create(lro, X=train.array, y=traingood,
                                     ctx=devices, num.round=30, array.batch.size=100,
                                     learning.rate=0.0001, momentum=0.9, wd=0.00001,
                                     eval.metric=mx.metric.rmse,
                                     epoch.end.callback=mx.callback.log.train.metric(100))


test <- read.csv("test.csv", na.strings = c("", "NA"))
timg <- test$Image

timg <- as.character(timg)
timg <- noquote(unlist(strsplit(timg, " ")))
timg <- as.numeric(timg)
timg1 <- matrix(timg, nrow=1783, ncol=96*96, byrow = T)
timg1 <- data.frame(timg1)
imgpred <- t(timg1/255)
test.array <- imgpred
dim(test.array) <- c(96, 96, 1, ncol(imgpred))
pred <- (predict(model, test.array))

p <- as.numeric(pred)

a <- as.data.frame(matrix(nrow = 53490, ncol = 2))
x <- 0
for(i in 1:1783){
	for(j in 1:30){
		x <- x+1
		a[x,1] <- i
		a[x,2] <- n[j]		

}}

a$Location <- p

ref <- read.csv("ref.csv")

colnames(a) <- c("ImageId", "FeatureName", 'Location')

ref <- ref[,-4]

library(plyr)
out <- join(ref,a)

finalout <- out[,c(1,4)]
write.csv(finalout,"sub1.csv",row.names = F)


mirrimg <- function(y){

y <- matrix(y, nrow=96, ncol=96,byrow=T)
z <- matrix(nrow=96, ncol=96)

z[,1:48] <- y[,49:96]
z[,49:96] <- y[1:48]
z1 <- as.vector(t(z))
z1
}

j <- t(imggood)
newimg <- matrix(nrow=2140, ncol=9216)


for(i in 1:2140){
newimg[i,] <- mirrimg(j[i,])
}
